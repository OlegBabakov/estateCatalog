<?php

namespace CatalogBundle\Repository;
use CatalogBundle\Classes\Search\EstateSearchCriteria;
use CatalogBundle\Classes\Search\EstateSearchCriteriaSqlBuilder;
use CatalogBundle\Classes\Search\QueryBuilder;
use Doctrine\ORM\Query;
use Doctrine\ORM\Query\ResultSetMapping;
use Doctrine\ORM\Query\ResultSetMappingBuilder;
use UserBundle\Entity\User;

/**
 * EstateRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class EstateRepository extends \Doctrine\ORM\EntityRepository
{

    public function searchByCriteria(EstateSearchCriteria $searchCriteria) {
        $qb = new QueryBuilder($this->_em);
        $qb->setBeforeWhere('SELECT es.* , count(*) OVER() AS total_found FROM estate es');

        $conditionBuilder = new EstateSearchCriteriaSqlBuilder();
        $conditionBuilder->setSqlConditions($qb, $searchCriteria);

        $rsm = new ResultSetMappingBuilder($this->_em);
        $rsm->addRootEntityFromClassMetadata('CatalogBundle\Entity\Estate', 'es');
        $rsm->addScalarResult('total_found', 'total_found', 'integer');

        $sql = $qb->getSQL();
        $qb->Query = $this->_em->createNativeQuery($sql, $rsm);

        $qb->addParameter('priceMin', $searchCriteria->price['min']);
        $qb->addParameter('priceMax', $searchCriteria->price['max']);

        $queryResult = $qb->Query->getResult();

        $result = [
            'totalFound' => null,
            'collection' => []
        ];

        $result['totalFound'] = $queryResult[0]['total_found'] ?? 0;
        foreach ($queryResult as $item) {
            $result['collection'][] = $item[0];
        }

        return $result;
    }

    public function getByUser(User $user) {
        return $this->findBy(['creator' => $user],['id' => 'DESC']);
    }

    public function getCountByUser(User $user) {
        $query = $this->_em->createQuery('SELECT count(e.id) FROM CatalogBundle\Entity\Estate e WHERE e.creator = :creator');
        $query->setParameter('creator', $user);
        $qty = $query->getSingleScalarResult();
        return $qty;
    }

}
